@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');

:root {
    --color1: #000000;
    --color2: #FFFFFF;
    --minute: ;
}

body {
    margin: 0;
}

h1,
p,
a {
    font-family: "Rubik", sans-serif;
    font-optical-sizing: auto;
    font-weight: 300;
    font-size: 25px;
    font-style: normal;
    line-height: 30px;
    margin: 0 0 20px 0;
}

h1 {
    font-size: 100px;
    font-weight: 300;
    line-height: 90px;
    margin-top: 5px;
    margin-left: -8px;
}

a {
    color: var(--color4);
    text-underline-offset: 5px;
}

input {
    position: fixed;
    rotate: 180deg;
    width: 400px;
    right: 60px;
    bottom: 20px;
}

.hidden {
    display: none;
}

#start {
    position: absolute;
    background-color: white;
    height: 100vh;
    width: 100vw;
    z-index: 3;
}

#container {
    height: 100vh;
    display: flex;
    overflow-y: hidden;
}

#container.transition * {
    transition: height 2s;
}

#start,
.col-info,
.col-diagramm div {
    padding: 0 20px;
}

.col-info p,
.col-diagramm div p {
    padding-top: 5px;
}

.col-info {
    flex: 400px;
}

#close,
#next {
    cursor: pointer;
    text-decoration-line: underline;
    text-underline-offset: 4px;
}

.col-diagramm {
    flex: calc(100vw - 420px);
}

.col-diagramm div {
    background-size: 100px;
    background-repeat: repeat;
    background-position: center;
}

.col-diagramm div:nth-child(odd):not(#start) {
    color: var(--color1);
    background-color: var(--color2);
}

.col-diagramm div:nth-child(even):not(#start) {
    color: var(--color2);
    background-color: var(--color1);
}

/*#bett {
    background-image: url(illu/bett.png);
}

#bad {
    background-image: url(illu/bad.png);
}

#zimmer {
    background-image: url(illu/zimmer.png);
}

#postauto {
    background-color: #000000;
    background-image: url();
}

#winti {
    background-image: url(illu/winti.png);
}*/

.col-scale {
    flex: 20px;
    background: repeating-linear-gradient(var(--color2),
            var(--color2) var(--minute),
            var(--color1) var(--minute),
            var(--color1) calc(var(--minute) * 2));
}